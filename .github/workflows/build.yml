name: Build
on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug-arm
            name: Linux Debug (ARM)
            runner: ubuntu-24.04-arm
            build-type: Debug
          - identifier: linux-release-arm
            name: Linux Release (ARM)
            runner: ubuntu-24.04-arm
            target: template_release
            build-type: Release
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-latest
            build-type: Debug
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-latest
            target: template_release
            build-type: Release
          # - identifier: windows-debug
          #   name: Windows Debug
          #   runner: ubuntu-latest
          #   build-type: Debug
          # - identifier: windows-release
          #   name: Windows Release
          #   runner: ubuntu-latest
          #   build-type: Release
          - identifier: macos-debug
            name: macOS Debug
            runner: macos-latest
            build-type: Debug
          - identifier: macos-release
            name: macOS Release
            runner: macos-latest
            build-type: Release

    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
        
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: (Windows) Compile
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          cmake . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DCMAKE_TOOLCHAIN_FILE=./toolchain-mingw-x86_64-w64.cmake
          cmake --build build --config ${{ matrix.build-type }} --target install
          ls -l ./build/bin ./build/libpd/libs
          ls -l ./demo/addons/godot-pd/bin
      
      - name: (Linux) Compile
        if: ${{ startsWith(matrix.identifier, 'linux-') }}
        run: |
          cmake . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
          cmake --build build --config ${{ matrix.build-type }} --target install
          ls -l ./build/bin ./build/libpd/libs
          ls -l ./demo/addons/godot-pd/bin

      - name: (macOS) Compile
        if: ${{ startsWith(matrix.identifier, 'macos-') }}
        run: |
          cmake . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
          cmake --build build --config ${{ matrix.build-type }} --target install
          ls -l ./build/bin ./build/libpd/libs
          ls -l ./demo/addons/godot-pd/bin
          
      # - name: (Windows) Move pthread DLL
      #   if: ${{ startsWith(matrix.identifier, 'windows-') }}
      #   run: |
      #     cp /usr/x86_64-w64-mingw32/lib/libwinpthread-1.dll ${{ matrix.target-dir }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ format('godot-pd-binaries_{0}', matrix.identifier) }}
          path: ${{ github.workspace }}/demo/addons/godot-pd/bin

  merge-artifacts:
    needs: build
    runs-on: ubuntu-latest
    name: Merge Artifacts
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      
      - name: Create Release Folder
        run: |
          mkdir -p godot-pd-release/addons/godot-pd/bin/
          mkdir -p godot-pd-release/addons/godot-pd/icons/
          mkdir -p godot-pd-release/addons/godot-pd/license/

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: godot-pd-release/addons/godot-pd/bin/
          pattern: godot-pd-binaries_*
          merge-multiple: true

      - name: Move Files
        run: |
          cp demo/addons/godot-pd/godot-pd.gdextension godot-pd-release/addons/godot-pd/
          cp README.md godot-pd-release/addons/godot-pd/
          cp CHANGELOG.txt godot-pd-release/addons/godot-pd/
          cp LICENSE.txt godot-pd-release/addons/godot-pd/license/
          cp 3RDPARTY.txt godot-pd-release/addons/godot-pd/license/
          cp demo/addons/godot-pd/icons/audio_stream_pd.svg godot-pd-release/addons/godot-pd/icons/
          ls -lR godot-pd-release/addons/godot-pd/
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-pd-release
          path: godot-pd-release/
